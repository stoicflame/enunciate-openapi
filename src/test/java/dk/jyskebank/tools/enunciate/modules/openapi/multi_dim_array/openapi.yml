openapi: 3.0.0
info:
  title: "Title from enunciate.xml"
  version: "version from enunciate.xml"
  description: "Description from enunciate.xml. Can contain weird letters æøåÆØÅ"
servers: []
paths:
  "/data/{pathArg}":
    post:
      description: "Summary.\n\nDescription follows..."
      tags:
        - "Data"
      summary: "Summary."
      deprecated: false
      operationId: update
      parameters:
      - name: "userid"
        in: header
        description: "The actual user performing the operation"
        required: false
        schema:
          type: string
        style: simple
      - name: "pathArg"
        in: path
        description: "The id of the customer"
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        description: ""
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/json_DataDTO"
      responses:
        "201":
          description: "Created, Consents created"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/json_DataDTO"
        "204":
          description: "No Content, Current consents updated"
          content:
            "application/json":
              schema:
                description: "No Content, Current consents updated"
                type: string
                format: binary
        "400":
          description: "Bad request, inspect response payload for error details"
        "401":
          description: "Unauthorized, please provide valid Authentication header"
        "403":
          description: "Forbidden, user does not have permission"
        "404":
          description: "Not Found, inspect response for more info"
        "500":
          description: "Internal Server Error, Unexpected server error"
 
components:
  schemas:
    "json_DataDTO":
      title: "multiDimArraySupport"
      type: object
      properties:
        "name":
          type: string
        "temperatures":
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: integer
                format: int32
        "locations":
          type: array
          items:
            type: integer
            format: int32
        "sudoku":
          type: array
          items:
            type: array
            items:
              type: integer
              format: int32
      example:
        name: "..."
        temperatures:
        - - - 12345
            - 12345
          - - 12345
            - 12345
        - - - 12345
            - 12345
          - - 12345
            - 12345
        locations:
        - 12345
        - 12345
        sudoku:
        - - 12345
          - 12345
        - - 12345
          - 12345
